{{!--  This will be for creating / editing a project. You should be able to enter a title, use a markdown editor to edit the 
project's body, upload media (with a separate(?) upload for the project's thumbnail), and maybe control misc. settings, like
comment display.

    Ideas:
        - Should the project's thumbnail be a separate upload, or should it automatically scan its media for an image? 
        Maybe both, if the user doesn't upload a thumbnail?
        - A setting for displaying comments? Maybe one for disabling comments, too. I dunno, we can brainstorm once we get the 
        main stuff working  --}}

<head>
    
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyFolio</title>
    <link rel="stylesheet" href="/css/mainpage_style.css">
    <link rel="stylesheet" href="/css/jass.css">
    <link rel="stylesheet" href="/css/project_edit.css">
</head>

<div style = "margin-top: 7.5rem; display:flex; justify-content:center">
    <div>
        <div style = "display:flex;justify-content:space-between;">
            <h2>{{projectInfo.title}}</h2>
            <button id = "save" class = "btn" style = "margin:0.1rem;">Save</button>
        </div>
        <div class = "line"></div>
        <form>
            <div class = "p1">
                <label class = "field-label">Title</label>
                <input type = "text" class = "project-text-input" id = "project-title">
            </div>
            
            <div class = "p1">
                <label class = "field-label">Summary</label>
                <input type = "text" class = "project-text-input" id = "project-summary">
            </div>
            <div class = "p1">
                <textarea id = "project-body" style = "width: 100%"></textarea>
            </div>
            <div class = "line"></div>
            <div class = "p1">
                <label class = "field-label">Media</label>
                <div style = "display: flex; justify-content:center;">
                    <button class = "btn" id = "open_filestack">Upload</button>
                </div>
                <div class = "mediaholder">
                    {{#each media}}
                        {{> media this}}
                    {{/each}}
                </div>
            </div>
        </form>
    </div>
</div>

<link rel="stylesheet" href="https://unpkg.com/easymde/dist/easymde.min.css">
<script src="https://unpkg.com/easymde/dist/easymde.min.js"></script>
<script src="https://unpkg.com/filestack-js@3.x.x"></script>

<script>
    
    const saveButton = document.querySelector('#save');
    const projectBody = document.querySelector('#project-body');
    const projectSummary = document.querySelector('#project-summary');
    const projectTitle = document.querySelector('#project-title');

    const easyMDE = new EasyMDE({
        element: projectBody,
        placeholder: "Write something about your project!",
        maxHeight: "20rem",
        maxWidth: "100%"
    });

    const identifyProject = function(){
        const url = window.location.href;
        s1 = url.indexOf('project/');
        if(s1 > -1){
            s2 = url.lastIndexOf('/edit');
            result = url.slice(s1+8, s2);
            return result * 1;
        }
    }
    
    document.addEventListener('DOMContentLoaded', function(event){
        const projectID = identifyProject();
        var info = fetch('/api/projects/'+projectID, {
            method: 'GET',
            headers: { 'Content-Type': 'application/json' },
        }).then(response => response.text()).then(text => {
            f = JSON.parse(text);
            easyMDE.value(f.body);
            projectTitle.value = f.title;
            projectSummary.value = f.summary;
        });
    })


    const saveProjectHandler = async function(event){
        event.preventDefault();
        const projectID = identifyProject();
        var saved = await fetch('/api/projects/'+projectID, {
            method: 'PUT',
            body: JSON.stringify({
                title: projectTitle.value.trim(),
                summary: projectSummary.value.trim(),
                body: easyMDE.value(),
            }),
            headers: { 'Content-Type': 'application/json' },
        })
        if(saved.ok){
            document.location.reload();
        }
        else{
            alert("Problem saving project. Please try again later.");
        }
    }
    saveButton.addEventListener('click', saveProjectHandler);

    
    const uploadButton = document.querySelector('#open_filestack');

    const uploadHandler = async function(event){
        event.preventDefault();
    }
    uploadButton.addEventListener('click', uploadHandler);
</script>